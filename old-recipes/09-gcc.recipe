# Build recipe for GCC.
#
# Copyright (C) 2012-2014 Matias A. Fonzo.
#
# This recipe is free software: you have unlimited permission
# to copy, distribute and modify it.

program = gcc
version = 4.8.2
release = 1

tarname = ${program}-${version}.tar.lz
jobs = 1

docs = COPYING* README
destdir = /pkg/${program}-${version}
docdir = /usr/share/doc/${program}-${version}

machine_type = $$(gcc -dumpmachine)

build {
  cd $srcdir

  patch -Np0 -i ${patchdir}/gcc/gcc-nofixincludes
  patch -Np0 -i ${patchdir}/gcc/gcc-libiberty

  # x86
  for file in \
   gcc/config/linux.h gcc/config/i386/linux.h gcc/config/i386/linux64.h gcc/config/i386/sysv4.h ; \
  do \
    sed -i \
        -e 's@lib/ld-linux.so.2@lib/ld-musl-i386.so.1@' \
        -e 's@lib64/ld-linux-x86-64.so.2@lib/ld-musl-x86_64.so.1@' \
        $$file ; \
  done

  # MIPS
  for file in gcc/config/mips/linux64.h gcc/config/mips/linux.h ; do \
    sed -i \
        -e 's@lib/ld.so.1@lib/ld-musl-mips.so.1@' \
        -e 's@lib32/ld.so.1@lib/ld-musl-mips.so.1@' \
        -e 's@lib64/ld.so.1@lib/ld-musl-mips.so.1@' \
        $$file ; \
  done

  # ARM
  for file in gcc/config/arm/linux-eabi.h gcc/config/arm/linux-elf.h ; do \
    sed -i \
        -e 's@lib/ld-linux.so.2@lib/ld-musl-arm.so.1@' \
        -e 's@lib/ld-linux.so.3@lib/ld-musl-arm.so.1@' \
        $$file ; \
  done

  # No multilib
  sed -i -e '/MULTILIB_OSDIRNAMES/d' $$(find gcc/config -type f -name t-linux64) || :

  # Avoid specific Glibc code
  ( cd libstdc++-v3/config/os && \
    mv gnu-linux gnu-linux.orig ; \
    cp -r generic gnu-linux ; \
    cp gnu-linux.orig/arm-eabi-extra.ver gnu-linux ; \
  )
  ( cd libitm/config && \
    mv linux/x86 linux/x86_glibc ; \
    cp -r generic linux/x86 ; \
  )

  rm -rf ../gcc-build
  mkdir ../gcc-build
  cd ../gcc-build

  ../${program}-${version}/configure $configure_args \
   --enable-threads=posix \
   --enable-__cxa_atexit \
   --enable-clocale=generic \
   --enable-languages=c,c++ \
   --enable-libitm \
   --enable-libssp \
   --enable-tls \
   --disable-shared \
   --disable-multilib \
   --disable-nls \
   --disable-libstdcxx-pch \
   --disable-libstdcxx-verbose \
   --disable-libmudflap \
   --disable-libsanitizer \
   --disable-install-libiberty \
   --with-system-zlib

  make -j${jobs} BOOT_LDFLAGS="-static" LDFLAGS="-static"
  make install DESTDIR=$destdir

  # To compatibility
  ( cd ${destdir}/usr/bin || exit 1 ; \
    mv gcc gcc-${version} ; \
    ln -sf gcc-${version} gcc ; \
    ln -sf gcc cc ; \
    ln -sf gcc-${version} ${machine_type}-gcc ; \
    ln -sf gcc-${version} ${machine_type}-gcc-${version} ; \
    mv g++ g++-gcc-${version} ; \
    ln -sf g++-gcc-${version} g++ ; \
    ln -sf g++ c++ ; \
    ln -sf g++-gcc-${version} ${machine_type}-g++ ; \
    ln -sf g++-gcc-${version} ${machine_type}-c++ ; \
  )
  ( mkdir -p ${destdir}/lib && cd ${destdir}/lib && ln -sf ../bin/cpp . ; )

  # Compress info documents (if needed)
  if [ -d ${destdir}/usr/share/info ] ; then \
    rm -f ${destdir}/usr/share/info/dir && \
    gzip -9 ${destdir}/usr/share/info/* ; \
  fi

  # Compress and link manual pages (if needed)
  if [ -d ${destdir}/usr/share/man ] ; then \
    ( cd ${destdir}/usr/share/man && \
      find . -type f -exec gzip -9 {} \; && \
      find . -type l | while read file ; do \
        ln -sf $$(readlink $$file).gz $${file}.gz && \
        rm $$file ; \
      done ; \
    ) ; \
  fi

  # Copy the documentation
  ( mkdir -p ${destdir}${docdir} ; \
    cd ${tmpdir}/${program}-${version} && \
    cp -a $docs ${destdir}${docdir} ; \
  )

  # Delete temporary build directory
  cd $srcdir
  if [ -d ../gcc-build ] ; then \
    rm -rf ../gcc-build ; \
  fi

  reclinker -rf /pkg/${program}-${version} /
}

