# Build script for gcc (static)
#
# Copyright (C) 2014-2016 Matias A. Fonzo.
#
# This script is free software: you have unlimited permission
# to copy, distribute and modify it.

version=5.3.0

echo "Unpacking gcc-${version} ..."
rm -rf "${tmpdir}"/sources/gcc-${version}
tar xf "${worktree}"/sources/gcc-${version}.tar.bz2 -C "${tmpdir}"/sources

# Build instructions
cd "${tmpdir}"/sources/gcc-${version}

patch -Np1 -i "${worktree}"/patches/gcc/gcc-5.3.0.diff

# Build GCC built-in prerequisites
for file in "${worktree}"/sources/gmp-*.tar.lz "${worktree}"/sources/mpfr-*.tar.bz2 "${worktree}"/sources/mpc-*.tar.gz ; do
  if [ ! -e "$file" ] ; then
    echo "The built-in prerequisite \`${file##*/}' for GCC is required." 1>&2
    exit 1
  fi

  # Unpack prerequisite
  tar xf "$file"

  # Basename
  file="${file##*/}"
  file="${file%.tar*}"

  # To extract name and version
  name="${file%-*}"
  vern="${file#*-}"

  # Remove any words from the version number
  vern="$(printf %s "$vern" | tr -d '[:lower:]')"

  # Move the source as the expected directory name
  mv "${name}-${vern}" "$name"
done
unset file name vern

# Build in a separate directory
rm -rf ../gcc-build
mkdir ../gcc-build
cd ../gcc-build

../gcc-${version}/configure \
 --prefix="$crossdir" \
 --enable-languages=c \
 --enable-checking=release \
 --target=$target \
 --with-sysroot="${crossdir}"/$target \
 --with-newlib \
 --without-headers \
 --disable-multilib \
 --disable-nls \
 --disable-shared \
 --disable-threads \
 --disable-libmudflap \
 --disable-libsanitizer \
 --disable-decimal-float \
 --disable-libquadmath \
 --disable-libssp \
 --disable-libvtv \
 --disable-libcilkrts \
 --disable-libitm \
 --disable-libatomic \
 --disable-libgomp \
 --without-ppl \
 --without-cloog \
 $gcc_options

make -j${jobs} all-gcc all-target-libgcc
make install-gcc install-target-libgcc

# To prevent broken toolchains from pulling in lgcc_s
ln -sf libgcc.a "$("${target}-gcc" -print-libgcc-file-name | sed 's/libgcc/&_eh/')"

